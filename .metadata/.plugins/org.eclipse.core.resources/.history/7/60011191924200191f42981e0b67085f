package com.dineshonjava.prodos.security;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.util.StringUtils;
import org.springframework.web.filter.GenericFilterBean;

public class CustomAuthenticationFilter extends GenericFilterBean {
	
	private static final String AUTHORIZATION = "Authorization";
	private static final String PREFIX = "Bearer";
	private static final String EMPTY = "";
		
	@Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)
			throws IOException, ServletException {
		
		 String accessToken = ((HttpServletRequest) request).getHeader(AUTHORIZATION);
		 if (accessToken != null && accessToken.startsWith(PREFIX)) {
			 accessToken=  accessToken.replace(PREFIX, EMPTY).trim();
		 }
		 if(!StringUtils.isEmpty(accessToken)) {
			  Authentication auth = new CustomAuthenticationToken(accessToken);
	            SecurityContextHolder.getContext().setAuthentication(auth);
		  }
		  filterChain.doFilter(request, response);
	}
    
}