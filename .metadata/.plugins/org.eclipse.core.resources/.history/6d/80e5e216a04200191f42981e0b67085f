package com.dineshonjava.prodos.security;

import org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.oauth2.provider.OAuth2Authentication;
import org.springframework.util.ObjectUtils;

public class CustomAuthenticationProvider implements AuthenticationProvider {

	private ResourceServerProperties resourceServerProperties;

	public CustomAuthenticationProvider(ResourceServerProperties resourceServerProperties) {
		this.resourceServerProperties = resourceServerProperties;
	}

	@Override
	public Authentication authenticate(Authentication authentication) throws AuthenticationException {

		CustomAuthenticationToken customAuthentication = (CustomAuthenticationToken) authentication;
		String accessToken = customAuthentication.getToken();

		CustomUserInfoTokenServices customUserInfoTokenServices = new CustomUserInfoTokenServices(
				resourceServerProperties.getUserInfoUri(), resourceServerProperties.getClientId());
		
		OAuth2Authentication oAuth2Authentication = customUserInfoTokenServices.loadAuthentication(accessToken);
		
		if (ObjectUtils.isEmpty(oAuth2Authentication)) {
			return null;
		}
		oAuth2Authentication.setAuthenticated(true);
		return oAuth2Authentication;
	}

	@Override
	public boolean supports(Class<?> authentication) {
		return CustomAuthenticationToken.class.isAssignableFrom(authentication);
	}
}
