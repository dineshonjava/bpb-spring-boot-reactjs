package com.dineshonjava.prodos.security;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.util.StringUtils;
import org.springframework.web.filter.OncePerRequestFilter;

import com.dineshonjava.prodos.service.UserDetailServiceImpl;

public class CustomAuthenticationFilter extends OncePerRequestFilter {
	
	UserDetailServiceImpl loginService;
	
	public CustomAuthenticationFilter(UserDetailServiceImpl loginService){
		this.loginService = loginService;
	}
	
    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)throws ServletException, IOException {
    	if(loginService != null && loginService.getAuthenticatedUserRecord() == null){
	    	String accessToken = request.getParameter("authId");
	        if(!StringUtils.isEmpty(accessToken)) {
	            // Create our Authentication and let Spring know about it
	            Authentication auth = new CustomAuthenticationToken(accessToken);
	            SecurityContextHolder.getContext().setAuthentication(auth);
	        }
    	}
	    filterChain.doFilter(request, response);
    }
    
}